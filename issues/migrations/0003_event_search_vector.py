# Generated by Django 3.0.6 on 2020-05-10 16:24

import django.contrib.postgres.search
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("issues", "0002_auto_20200306_1546"),
    ]

    migration = """
        CREATE FUNCTION data_to_search_vector() RETURNS trigger AS $$
        begin
        new.search_vector :=
            jsonb_to_tsvector('english', new.data, '["string","numeric","key"]');
        return new;
        end
        $$ LANGUAGE plpgsql;;

        CREATE TRIGGER event_search_vector_update BEFORE INSERT OR UPDATE
        ON issues_event FOR EACH ROW EXECUTE PROCEDURE
        data_to_search_vector();
        UPDATE issues_event set event_id = event_id;
    """

    reverse_migration = """
        DROP TRIGGER IF EXISTS event_search_vector_update on issues_event;
        DROP FUNCTION IF EXISTS data_to_search_vector;
    """

    operations = [
        migrations.AddField(
            model_name="event",
            name="search_vector",
            field=django.contrib.postgres.search.SearchVectorField(
                editable=False, null=True
            ),
        ),
        migrations.RunSQL(migration, reverse_migration),
        migrations.AddIndex(
            model_name="event",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_vector"], name="search_vector_idx"
            ),
        ),
    ]
